// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © shubhamtaywade82

//@version=6
indicator("Custom Period JSON Alert Indicator - v2", overlay=true, shorttitle="KeepLive")

// Input: Alert period in minutes
periodMinutes      = input.int(title="Alert Period (minutes)", defval=14, minval=1)
periodMilliseconds = periodMinutes * 60 * 1000  // Convert minutes to milliseconds

// Inputs for additional alert parameters
strategyType   = input.string("intraday", title="Strategy Type")
instrumentType = input.string("crypto", title="Instrument Type")
orderType      = input.string("session", title="Order Type")
longSL         = input.float(0.0, title="Stop Loss", step=0.01)
longTP         = input.float(0.0, title="Take Profit", step=0.01)
limitPrice     = input.float(0.0, title="Limit Price", step=0.01)
stopPrice      = input.float(0.0, title="Stop Price", step=0.01)
stratName      = input.string("keep alive", title="Strategy Name")

// Input for session time constraint (e.g., alerts only between 9:00 and 15:00)
alertSession   = input.session("0900-1500", title="Alert Session")

// Detect if the current bar is within the specified session.
// This returns true if the bar's time falls within the defined session.
inSession = not na(time(timeframe.period, alertSession))

// Detect the start of a new period by comparing time buckets.
newPeriod = math.floor(time / periodMilliseconds) != math.floor(time[1] / periodMilliseconds)

// Function to build the JSON alert message
f_jsonAlert(action, position, strategy, instrument, stop, target, order, limitPrice, stopPrice) =>
    "{" + '"alert":{' + '"ticker":"' + syminfo.ticker + '",' + '"instrument_type":"' + instrument + '",' + '"action":"' + action + '",' + '"order_type":"' + order + '",' + '"current_position":"' + position + '",' + '"strategy_type":"' + strategy + '",' + '"current_price":' + str.tostring(close, "#.##") + ',' + '"high":' + str.tostring(high, "#.##") + ',' + '"low":' + str.tostring(low, "#.##") + ',' + '"volume":' + str.tostring(volume) + ',' + '"time":"' + str.format_time(time, "yyyy-MM-dd\'T\'HH:mm:ssZ", syminfo.timezone) + '",' + '"chart_interval":"' + timeframe.period + '",' + '"stop_loss":' + str.tostring(stop, "#.##") + ',' + '"take_profit":' + str.tostring(target, "#.##") + ',' + '"limit_price":' + str.tostring(limitPrice, "#.##") + ',' + '"stop_price":' + str.tostring(stopPrice, "#.##") + ',' + '"strategy_name":"' + stratName + '",' + '"strategy_id":"' + syminfo.ticker + '_' + strategy + '",' + '"exchange":"' + syminfo.prefix + '"' + '}' + '}'

// Build the JSON alert message with custom parameters
jsonMessage = f_jsonAlert("buy", "long", strategyType, instrumentType, longSL, longTP, orderType, limitPrice, stopPrice)

// Fire the alert on the close of the bar if a new period has started and the bar is within the specified session.
if newPeriod and inSession
    alert(jsonMessage, alert.freq_once_per_bar_close)

// Optional: Plot a marker on the chart to indicate the start of a new period during the session.
// plotshape(newPeriod and inSession, title="Alert Marker", style=shape.circle, location=location.top, size=size.tiny, color=color.green)